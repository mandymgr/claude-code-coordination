{
  "id": "debug-async",
  "name": "Async Bug Debugging",
  "description": "Debug a race condition in async code",
  "task": "Fix the race condition in this async function that sometimes returns stale data",
  "context": {
    "targetFiles": [
      "services/DataService.js"
    ],
    "codeContext": "\nclass DataService {\n  constructor() {\n    this.cache = new Map();\n  }\n  \n  async getData(id) {\n    if (this.cache.has(id)) {\n      return this.cache.get(id);\n    }\n    \n    const data = await this.fetchFromAPI(id);\n    this.cache.set(id, data);\n    return data;\n  }\n  \n  async fetchFromAPI(id) {\n    await new Promise(resolve => setTimeout(resolve, Math.random() * 1000));\n    return { id, value: Math.random(), timestamp: Date.now() };\n  }\n}",
    "requirements": [
      "Fix race condition",
      "Maintain performance",
      "Add proper error handling"
    ]
  },
  "expectedOutcome": {
    "success": true,
    "minScore": 0.75,
    "maxDuration": 60000,
    "keywords": [
      "Promise",
      "async",
      "race condition",
      "cache"
    ],
    "antiPatterns": [
      "synchronous",
      "blocking"
    ]
  },
  "metadata": {
    "difficulty": "hard",
    "category": "debugging",
    "tags": [
      "javascript",
      "async",
      "debugging",
      "performance"
    ],
    "createdAt": "2025-08-27T11:13:38.942Z",
    "lastUpdated": "2025-08-27T11:13:38.942Z"
  }
}