apiVersion: apps/v1
kind: Deployment
metadata:
  name: claude-coordination-server
  namespace: claude-coordination
  labels:
    app: claude-coordination-server
    component: application
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  selector:
    matchLabels:
      app: claude-coordination-server
  template:
    metadata:
      labels:
        app: claude-coordination-server
        component: application
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"
        prometheus.io/path: "/metrics"
    spec:
      containers:
      - name: server
        image: claude-coordination:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        env:
        - name: NODE_ENV
          valueFrom:
            configMapKeyRef:
              name: claude-coordination-config
              key: NODE_ENV
        - name: LOG_LEVEL
          valueFrom:
            configMapKeyRef:
              name: claude-coordination-config
              key: LOG_LEVEL
        - name: PORT
          valueFrom:
            configMapKeyRef:
              name: claude-coordination-config
              key: PORT
        - name: POSTGRES_HOST
          valueFrom:
            configMapKeyRef:
              name: claude-coordination-config
              key: POSTGRES_HOST
        - name: POSTGRES_PORT
          valueFrom:
            configMapKeyRef:
              name: claude-coordination-config
              key: POSTGRES_PORT
        - name: POSTGRES_DB
          valueFrom:
            configMapKeyRef:
              name: claude-coordination-config
              key: POSTGRES_DB
        - name: POSTGRES_USER
          valueFrom:
            configMapKeyRef:
              name: claude-coordination-config
              key: POSTGRES_USER
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: claude-coordination-secrets
              key: POSTGRES_PASSWORD
        - name: POSTGRES_SSL
          valueFrom:
            configMapKeyRef:
              name: claude-coordination-config
              key: POSTGRES_SSL
        - name: POSTGRES_READ_HOST
          valueFrom:
            configMapKeyRef:
              name: claude-coordination-config
              key: POSTGRES_READ_HOST
        - name: REDIS_HOST
          valueFrom:
            configMapKeyRef:
              name: claude-coordination-config
              key: REDIS_HOST
        - name: REDIS_PORT
          valueFrom:
            configMapKeyRef:
              name: claude-coordination-config
              key: REDIS_PORT
        - name: REDIS_CLUSTER_ENABLED
          valueFrom:
            configMapKeyRef:
              name: claude-coordination-config
              key: REDIS_CLUSTER_ENABLED
        - name: ANTHROPIC_API_KEY
          valueFrom:
            secretKeyRef:
              name: claude-coordination-secrets
              key: ANTHROPIC_API_KEY
        - name: OPENAI_API_KEY
          valueFrom:
            secretKeyRef:
              name: claude-coordination-secrets
              key: OPENAI_API_KEY
        - name: GOOGLE_API_KEY
          valueFrom:
            secretKeyRef:
              name: claude-coordination-secrets
              key: GOOGLE_API_KEY
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: claude-coordination-secrets
              key: JWT_SECRET
        - name: OTEL_SERVICE_NAME
          valueFrom:
            configMapKeyRef:
              name: claude-coordination-config
              key: OTEL_SERVICE_NAME
        - name: OTEL_EXPORTER_OTLP_TRACES_ENDPOINT
          valueFrom:
            configMapKeyRef:
              name: claude-coordination-config
              key: OTEL_EXPORTER_OTLP_TRACES_ENDPOINT
        resources:
          requests:
            memory: "1Gi"
            cpu: "500m"
          limits:
            memory: "2Gi"
            cpu: "1000m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        startupProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 30
        volumeMounts:
        - name: logs
          mountPath: /app/logs
        - name: tmp
          mountPath: /app/tmp
      volumes:
      - name: logs
        emptyDir: {}
      - name: tmp
        emptyDir: {}
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - claude-coordination-server
              topologyKey: kubernetes.io/hostname
---
apiVersion: v1
kind: Service
metadata:
  name: claude-coordination-service
  namespace: claude-coordination
  labels:
    app: claude-coordination-server
    component: application
spec:
  selector:
    app: claude-coordination-server
  ports:
  - name: http
    port: 8080
    targetPort: 8080
    protocol: TCP
  type: ClusterIP
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: claude-coordination-hpa
  namespace: claude-coordination
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: claude-coordination-server
  minReplicas: 3
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 100
        periodSeconds: 15
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 10
        periodSeconds: 60